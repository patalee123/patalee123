# -*- coding: utf-8 -*-
"""Untitled80.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pwt5m1Sd1AERVvBUJUgd8Zu_vPizVQ9v
"""

!pip install openai langchain transformers streamlit

!pip install faiss-cpu tiktoken

!pip install openai langchain

import os
os.environ["OPENAI_API_KEY"] = "your-api-key-here"  # Replace with your actual API key

import os

# Set your key directly here
os.environ["OPENAI_API_KEY"] = "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"  # replace this

import os

# For safe entry (not visible)
import getpass
os.environ["OPENAI_API_KEY"] = getpass.getpass("Enter your OpenAI API key: ")

!pip install --upgrade langchain langchain-community openai

# Corrected imports
from langchain_community.llms import OpenAI
from langchain.chains import ConversationChain
from langchain.memory import ConversationBufferMemory
import os

# Set your OpenAI API key
os.environ["OPENAI_API_KEY"] = "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"  # Replace with your actual key

# Create the LLM and memory
llm = OpenAI(temperature=0.6)
memory = ConversationBufferMemory()

# Set up the chatbot with memory
chatbot = ConversationChain(llm=llm, memory=memory)

# Ask a sample health-related question
response = chatbot.predict(input="Hi, I'm not feeling well. I have a headache and feel dizzy.")
print(response)

!pip install transformers

from transformers import pipeline

# Load a free Hugging Face text generation model
chatbot = pipeline("text-generation", model="google/flan-t5-base", tokenizer="google/flan-t5-base")

# Ask a question
prompt = "What should I do if I have a fever? Provide general advice only."
response = chatbot(prompt, max_length=100, do_sample=True)
print(response[0]['generated_text'])

print("üëã Welcome to the Health Advice Chatbot!")
print("‚ùó This chatbot provides general health advice only. Always consult a doctor for medical concerns.")
print("Type 'exit' to stop.\n")

while True:
    user_input = input("You: ")

    if user_input.lower() in ['exit', 'quit']:
        print("Chatbot: Take care! üëã")
        break

    # Add a prompt to guide the model to respond properly
    prompt = (
    f"You are a helpful and knowledgeable health assistant. "
    f"Provide clear and relevant general health advice based on the user's input: '{user_input}'. "
    f"Make sure to give practical tips or explanations related to the topic. "
    f"At the end, always include a polite reminder: 'However, please consult a qualified doctor for personalized advice.'"
)
    # Generate response
    response = chatbot(prompt, max_length=100, do_sample=True, top_k=50, temperature=0.7)

    # Print chatbot reply
    print("Chatbot:", response[0]['generated_text'])
    print()